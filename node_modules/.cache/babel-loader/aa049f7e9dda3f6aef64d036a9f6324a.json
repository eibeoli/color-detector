{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\BD\\\\Github\\\\color-detector\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),pack=_useState4[0],setPack=_useState4[1];var getLink=function getLink(event){event.preventDefault();fetch('/api/get_index',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({query:query})}).then(function(response){return response.json();}).then(function(data){setPack(data.image);displayImage(pack);//show_image(data.image, 300 ,300);\n//show_colors(data.colors)\n});};//display colors as \nfunction displayImage(data){var link=pack[\"image\"];var colors=pack[\"colors\"];var img=document.createElement(\"img\");img.src=link;img.width=300;img.height=300;//img.alt = alt;\n// This next line will just add it to the <body> tag\nvar mainContainer=document.getElementById(\"Color\");mainContainer.innerHTML=\"\";mainContainer.appendChild(img);}//for each rbg thing in colors, display it lol\n/**function displayLink(data){ //replace link ever\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.innerHTML = 'Link: ' + data.image;\n  }**/ /**function show_image(src, width, height) {\n    var img = document.createElement(\"img\");\n    img.src = src;\n    img.width = width;\n    img.height = height;\n    //img.alt = alt;\n\n    // This next line will just add it to the <body> tag\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.innerHTML = \"\";\n    mainContainer.appendChild(img);\n    \n}\n\nfunction show_colors(src){\n  var color = document.createElement(\"img\");\n  color.src = src;\n\n    // This next line will just add it to the <body> tag\n    var mainContainer = document.getElementById(\"Color\");\n    //mainContainer.innerHTML = \"\"; should be filled?\n    mainContainer.appendChild(color);\n}\n\n  /*function displayLink(data){\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.src = data.image;\n    document.body.appendChild(mainContainer);\n  }*/return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"div\",{class:\"Title\"},/*#__PURE__*/React.createElement(\"i\",null,\"Color Detector\")),/*#__PURE__*/React.createElement(\"div\",{id:\"Text\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"App made with React/Flask/Python, hosted on AWS\"),/*#__PURE__*/React.createElement(\"li\",null,\"Enter a word and an image will be generated, along with five prominent colors.\"))),/*#__PURE__*/React.createElement(\"div\",{id:\"Color\"}),/*#__PURE__*/React.createElement(\"form\",{id:\"Input-Container\",onSubmit:getLink},/*#__PURE__*/React.createElement(\"input\",{value:query,onChange:function onChange(event){return setQuery(event.target.value);},type:\"text\",name:\"search\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"detect\"})));}export default App;","map":{"version":3,"sources":["C:/Users/BD/Github/color-detector/src/App.js"],"names":["React","useState","App","query","setQuery","pack","setPack","getLink","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","image","displayImage","link","colors","img","document","createElement","src","width","height","mainContainer","getElementById","innerHTML","appendChild","target","value"],"mappings":"2HAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,WAAP,CAEA,QAASC,CAAAA,GAAT,EAAe,eACYD,QAAQ,EADpB,wCACNE,KADM,eACAC,QADA,8BAEWH,QAAQ,CAAC,EAAD,CAFnB,yCAENI,IAFM,eAEAC,OAFA,eAIb,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,KAAK,CAAI,CACvBA,KAAK,CAACC,cAAN,GACAC,KAAK,CAAC,gBAAD,CAAmB,CACxBC,MAAM,CAAG,MADe,CAExBC,OAAO,CAAG,CACR,eAAiB,kBADT,CAFc,CAKxBC,IAAI,CAAGC,IAAI,CAACC,SAAL,CAAe,CACpBZ,KAAK,CAAEA,KADa,CAAf,CALiB,CAAnB,CAAL,CAQCa,IARD,CAQM,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EARN,EASCF,IATD,CASM,SAACG,IAAD,CAAU,CACdb,OAAO,CAACa,IAAI,CAACC,KAAN,CAAP,CACAC,YAAY,CAAChB,IAAD,CAAZ,CACA;AACA;AACD,CAdD,EAeD,CAjBD,CAmBA;AAEA,QAASgB,CAAAA,YAAT,CAAsBF,IAAtB,CAA2B,CACzB,GAAIG,CAAAA,IAAI,CAAGjB,IAAI,CAAC,OAAD,CAAf,CACA,GAAIkB,CAAAA,MAAM,CAAGlB,IAAI,CAAC,QAAD,CAAjB,CAEA,GAAImB,CAAAA,GAAG,CAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV,CACAF,GAAG,CAACG,GAAJ,CAAUL,IAAV,CACAE,GAAG,CAACI,KAAJ,CAAY,GAAZ,CACAJ,GAAG,CAACK,MAAJ,CAAa,GAAb,CACA;AAEA;AACA,GAAIC,CAAAA,aAAa,CAAGL,QAAQ,CAACM,cAAT,CAAwB,OAAxB,CAApB,CACAD,aAAa,CAACE,SAAd,CAA0B,EAA1B,CACAF,aAAa,CAACG,WAAd,CAA0BT,GAA1B,EACD,CAGD;AAEA;;;MA5Ca,CAiDb;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8BA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,KAAK,CAAC,OAAX,eAAmB,8CAAnB,CADF,cAEE,2BAAK,EAAE,CAAC,MAAR,eACE,2CACA,gFADA,cAEA,+GAFA,CADF,CAFF,cAQE,2BAAK,EAAE,CAAC,OAAR,EARF,cASG,4BAAM,EAAE,CAAC,iBAAT,CAA2B,QAAQ,CAAEjB,OAArC,eACG,6BAAO,KAAK,CAAEJ,KAAd,CACA,QAAQ,CAAE,kBAACK,KAAD,QAAWJ,CAAAA,QAAQ,CAACI,KAAK,CAAC0B,MAAN,CAAaC,KAAd,CAAnB,EADV,CACmD,IAAI,CAAC,MADxD,CAC+D,IAAI,CAAC,QADpE,EADH,cAGG,6BAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,QAA3B,EAHH,CATH,CADF,CAiBD,CAED,cAAejC,CAAAA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [query,setQuery] = useState();\n  const [pack, setPack] = useState({});\n\n  const getLink = event => {\n    event.preventDefault();\n    fetch('/api/get_index', {\n    method : 'POST',\n    headers : {\n      'Content-Type' : 'application/json'\n    },\n    body : JSON.stringify({\n      query: query\n    })\n  }).then((response) => response.json())\n    .then((data) => {\n      setPack(data.image);\n      displayImage(pack);\n      //show_image(data.image, 300 ,300);\n      //show_colors(data.colors)\n    });\n  }\n\n  //display colors as \n\n  function displayImage(data){\n    var link = pack[\"image\"];\n    var colors = pack[\"colors\"]\n\n    var img = document.createElement(\"img\");\n    img.src = link;\n    img.width = 300;\n    img.height = 300;\n    //img.alt = alt;\n\n    // This next line will just add it to the <body> tag\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.innerHTML = \"\";\n    mainContainer.appendChild(img);\n  }\n  \n\n  //for each rbg thing in colors, display it lol\n\n  /**function displayLink(data){ //replace link ever\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.innerHTML = 'Link: ' + data.image;\n  }**/\n  \n  /**function show_image(src, width, height) {\n    var img = document.createElement(\"img\");\n    img.src = src;\n    img.width = width;\n    img.height = height;\n    //img.alt = alt;\n\n    // This next line will just add it to the <body> tag\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.innerHTML = \"\";\n    mainContainer.appendChild(img);\n    \n}\n\nfunction show_colors(src){\n  var color = document.createElement(\"img\");\n  color.src = src;\n\n    // This next line will just add it to the <body> tag\n    var mainContainer = document.getElementById(\"Color\");\n    //mainContainer.innerHTML = \"\"; should be filled?\n    mainContainer.appendChild(color);\n}\n\n  /*function displayLink(data){\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.src = data.image;\n    document.body.appendChild(mainContainer);\n  }*/\n\n  return (\n    <div className=\"App\">\n      <div class=\"Title\"><i>Color Detector</i></div>\n      <div id=\"Text\">\n        <ul>\n        <li>App made with React/Flask/Python, hosted on AWS</li>\n        <li>Enter a word and an image will be generated, along with five prominent colors.</li>\n        </ul>\n      </div>\n      <div id=\"Color\"></div>\n       <form id=\"Input-Container\" onSubmit={getLink}>\n          <input value={query}\n          onChange={(event) => setQuery(event.target.value)} type=\"text\" name=\"search\"></input>\n          <input type=\"submit\" value=\"detect\"></input>\n        </form> \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}