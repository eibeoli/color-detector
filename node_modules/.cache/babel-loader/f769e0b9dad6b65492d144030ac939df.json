{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BD\\\\Github\\\\color-detector\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css'; //i get an input here in html (string) that goes to api\n// it goes to python, it returns to js as a json file\n//goal is to convert it to a string and display it on html\n//i get a json file from api py\n//i convert it to a strong w/ the string thingy, display it through javascript\n\nfunction App() {\n  const [query, setQuery] = useState();\n\n  const getLink = event => {\n    event.preventDefault();\n    fetch('/api/get_index', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: query\n      })\n    }).then(response => response.text()).then(value => {\n      console.log(value);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 26\n    }\n  }, \"Color Detector\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"App made with React/Flask/Python, hosted on AWS\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Enter a word and an image will be generated, along with five prominent colors.\"))), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"Input-Container\",\n    onSubmit: getLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    onChange: event => setQuery(event.target.value),\n    type: \"text\",\n    name: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"detect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/BD/Github/color-detector/src/App.js"],"names":["React","useState","App","query","setQuery","getLink","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","text","value","console","log","target"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP,C,CAEA;AACA;AAEA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,EAAjC;;AACA,QAAMI,OAAO,GAAGC,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,KAAK,CAAC,gBAAD,EAAmB;AACxBC,MAAAA,MAAM,EAAG,MADe;AAExBC,MAAAA,OAAO,EAAG;AACR,wBAAiB;AADT,OAFc;AAKxBC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;AACpBV,QAAAA,KAAK,EAAEA;AADa,OAAf;AALiB,KAAnB,CAAL,CAQCW,IARD,CAQOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARpB,EASCF,IATD,CASOG,KAAD,IAAW;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAXD;AAYD,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAnB,CADF,eAEE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAFA,CADF,CAFF,eAQG;AAAM,IAAA,EAAE,EAAC,iBAAT;AAA2B,IAAA,QAAQ,EAAEZ,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAO,IAAA,KAAK,EAAEF,KAAd;AACA,IAAA,QAAQ,EAAGG,KAAD,IAAWF,QAAQ,CAACE,KAAK,CAACc,MAAN,CAAaH,KAAd,CAD7B;AACmD,IAAA,IAAI,EAAC,MADxD;AAC+D,IAAA,IAAI,EAAC,QADpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAGG;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CARH,CADF;AAgBD;;AAED,eAAef,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\n//i get an input here in html (string) that goes to api\n// it goes to python, it returns to js as a json file\n\n//goal is to convert it to a string and display it on html\n//i get a json file from api py\n//i convert it to a strong w/ the string thingy, display it through javascript\n\nfunction App() {\n  const [query,setQuery] = useState();\n  const getLink = event => {\n    event.preventDefault();\n    fetch('/api/get_index', {\n    method : 'POST',\n    headers : {\n      'Content-Type' : 'application/json'\n    },\n    body : JSON.stringify({\n      query: query\n    })\n  }).then((response) => response.text())\n    .then((value) => {\n      console.log(value);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <div class=\"Title\"><i>Color Detector</i></div>\n      <div id=\"Text\">\n        <ul>\n        <li>App made with React/Flask/Python, hosted on AWS</li>\n        <li>Enter a word and an image will be generated, along with five prominent colors.</li>\n        </ul>\n      </div>\n       <form id=\"Input-Container\" onSubmit={getLink}>\n          <input value={query}\n          onChange={(event) => setQuery(event.target.value)} type=\"text\" name=\"search\"></input>\n          <input type=\"submit\" value=\"detect\"></input>\n        </form> \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}