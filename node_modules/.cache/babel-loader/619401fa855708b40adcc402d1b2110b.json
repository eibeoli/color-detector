{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BD\\\\Github\\\\color-detector\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport palette from './array.jpg';\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState();\n  const [pack, setPack] = useState({});\n\n  const getLink = event => {\n    event.preventDefault();\n    fetch('/api/get_index', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: query\n      })\n    }).then(response => response.json()).then(data => {\n      //setPack(data.image);\n      //console.log(data.color),\n      //displayImage(pack);\n      show_image(data.image, 300, 300);\n    });\n  }; //display colors as \n\n\n  function displayImage(data) {\n    var link = query[\"image\"]; //var colors = pack[\"colors\"]\n\n    var img = document.createElement(\"img\");\n    img.src = link;\n    img.width = 300;\n    img.height = 300; //img.alt = alt;\n    // This next line will just add it to the <body> tag\n\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.innerHTML = \"\";\n    mainContainer.appendChild(img);\n  } //for each rbg thing in colors, display it lol\n\n\n  function displayLink(data) {\n    //replace link ever\n    var mainContainer = document.getElementById(\"Color\");\n    console.log(\"scream\");\n    mainContainer.innerHTML = 'Link: ' + data.image;\n  }\n\n  function show_image(src, width, height) {\n    var img = document.createElement(\"img\");\n    img.src = src;\n    img.width = width;\n    img.height = height; //img.alt = alt;\n    // This next line will just add it to the <body> tag\n\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.innerHTML = \"\";\n    mainContainer.appendChild(img);\n  }\n\n  function show_colors(src) {\n    var color = document.createElement(\"img\");\n    color.src = src;\n    console.log(color.src); // This next line will just add it to the <body> tag\n\n    var mainContainer = document.getElementById(\"Color\"); //mainContainer.innerHTML = \"\"; should be filled?\n\n    mainContainer.appendChild(color);\n  }\n  /*function displayLink(data){\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.src = data.image;\n    document.body.appendChild(mainContainer);\n  }*/\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 26\n    }\n  }, \"Color Detector\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Enter a word and an image will be generated, along with five prominent colors.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"Color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"Input-Container\",\n    onSubmit: getLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    onChange: event => setQuery(event.target.value),\n    type: \"text\",\n    name: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"detect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/BD/Github/color-detector/src/App.js"],"names":["React","useState","useEffect","palette","App","query","setQuery","pack","setPack","getLink","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","show_image","image","displayImage","link","img","document","createElement","src","width","height","mainContainer","getElementById","innerHTML","appendChild","displayLink","console","log","show_colors","color","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,EAAjC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMQ,OAAO,GAAGC,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,KAAK,CAAC,gBAAD,EAAmB;AACxBC,MAAAA,MAAM,EAAG,MADe;AAExBC,MAAAA,OAAO,EAAG;AACR,wBAAiB;AADT,OAFc;AAKxBC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;AACpBZ,QAAAA,KAAK,EAAEA;AADa,OAAf;AALiB,KAAnB,CAAL,CASCa,IATD,CASOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EATpB,EAUCF,IAVD,CAUOG,IAAD,IAAU;AACd;AACA;AACA;AACAC,MAAAA,UAAU,CAACD,IAAI,CAACE,KAAN,EAAa,GAAb,EAAkB,GAAlB,CAAV;AACD,KAfD;AAgBD,GAlBD,CAJa,CAwBb;;;AAEA,WAASC,YAAT,CAAsBH,IAAtB,EAA2B;AACzB,QAAII,IAAI,GAAGpB,KAAK,CAAC,OAAD,CAAhB,CADyB,CAEzB;;AAEA,QAAIqB,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAF,IAAAA,GAAG,CAACG,GAAJ,GAAUJ,IAAV;AACAC,IAAAA,GAAG,CAACI,KAAJ,GAAY,GAAZ;AACAJ,IAAAA,GAAG,CAACK,MAAJ,GAAa,GAAb,CAPyB,CAQzB;AAEA;;AACA,QAAIC,aAAa,GAAGL,QAAQ,CAACM,cAAT,CAAwB,OAAxB,CAApB;AACAD,IAAAA,aAAa,CAACE,SAAd,GAA0B,EAA1B;AACAF,IAAAA,aAAa,CAACG,WAAd,CAA0BT,GAA1B;AACD,GAxCY,CA2Cb;;;AAEA,WAASU,WAAT,CAAqBf,IAArB,EAA0B;AAAE;AAC1B,QAAIW,aAAa,GAAGL,QAAQ,CAACM,cAAT,CAAwB,OAAxB,CAApB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAN,IAAAA,aAAa,CAACE,SAAd,GAA0B,WAAWb,IAAI,CAACE,KAA1C;AACD;;AAED,WAASD,UAAT,CAAoBO,GAApB,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwC;AACtC,QAAIL,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAF,IAAAA,GAAG,CAACG,GAAJ,GAAUA,GAAV;AACAH,IAAAA,GAAG,CAACI,KAAJ,GAAYA,KAAZ;AACAJ,IAAAA,GAAG,CAACK,MAAJ,GAAaA,MAAb,CAJsC,CAKtC;AAEA;;AACA,QAAIC,aAAa,GAAGL,QAAQ,CAACM,cAAT,CAAwB,OAAxB,CAApB;AACAD,IAAAA,aAAa,CAACE,SAAd,GAA0B,EAA1B;AACAF,IAAAA,aAAa,CAACG,WAAd,CAA0BT,GAA1B;AAEH;;AAED,WAASa,WAAT,CAAqBV,GAArB,EAAyB;AACvB,QAAIW,KAAK,GAAGb,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAY,IAAAA,KAAK,CAACX,GAAN,GAAYA,GAAZ;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACX,GAAlB,EAHuB,CAKrB;;AACA,QAAIG,aAAa,GAAGL,QAAQ,CAACM,cAAT,CAAwB,OAAxB,CAApB,CANqB,CAOrB;;AACAD,IAAAA,aAAa,CAACG,WAAd,CAA0BK,KAA1B;AACH;AAEC;;;;;;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAnB,CADF,eAEE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFADA,CADF,CAFF,eAOE;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQG;AAAM,IAAA,EAAE,EAAC,iBAAT;AAA2B,IAAA,QAAQ,EAAE/B,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAO,IAAA,KAAK,EAAEJ,KAAd;AACA,IAAA,QAAQ,EAAGK,KAAD,IAAWJ,QAAQ,CAACI,KAAK,CAAC+B,MAAN,CAAaC,KAAd,CAD7B;AACmD,IAAA,IAAI,EAAC,MADxD;AAC+D,IAAA,IAAI,EAAC,QADpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAGG;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CARH,CADF;AAqBD;;AAED,eAAetC,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport palette from './array.jpg';\nimport './App.css';\n\nfunction App() {\n  const [query,setQuery] = useState();\n  const [pack, setPack] = useState({});\n\n  const getLink = event => {\n    event.preventDefault();\n    fetch('/api/get_index', {\n    method : 'POST',\n    headers : {\n      'Content-Type' : 'application/json'\n    },\n    body : JSON.stringify({\n      query: query,\n\n    })\n  }).then((response) => response.json())\n    .then((data) => {\n      //setPack(data.image);\n      //console.log(data.color),\n      //displayImage(pack);\n      show_image(data.image, 300 ,300);\n    });\n  }\n\n  //display colors as \n\n  function displayImage(data){\n    var link = query[\"image\"];\n    //var colors = pack[\"colors\"]\n\n    var img = document.createElement(\"img\");\n    img.src = link;\n    img.width = 300;\n    img.height = 300;\n    //img.alt = alt;\n\n    // This next line will just add it to the <body> tag\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.innerHTML = \"\";\n    mainContainer.appendChild(img);\n  }\n  \n\n  //for each rbg thing in colors, display it lol\n\n  function displayLink(data){ //replace link ever\n    var mainContainer = document.getElementById(\"Color\");\n    console.log(\"scream\");\n    mainContainer.innerHTML = 'Link: ' + data.image;\n  }\n  \n  function show_image(src, width, height) {\n    var img = document.createElement(\"img\");\n    img.src = src;\n    img.width = width;\n    img.height = height;\n    //img.alt = alt;\n\n    // This next line will just add it to the <body> tag\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.innerHTML = \"\";\n    mainContainer.appendChild(img);\n    \n}\n\nfunction show_colors(src){\n  var color = document.createElement(\"img\");\n  color.src = src;\n  console.log(color.src)\n\n    // This next line will just add it to the <body> tag\n    var mainContainer = document.getElementById(\"Color\");\n    //mainContainer.innerHTML = \"\"; should be filled?\n    mainContainer.appendChild(color);\n}\n\n  /*function displayLink(data){\n    var mainContainer = document.getElementById(\"Color\");\n    mainContainer.src = data.image;\n    document.body.appendChild(mainContainer);\n  }*/\n\n  return (\n    <div className=\"App\">\n      <div class=\"Title\"><i>Color Detector</i></div>\n      <div id=\"Text\">\n        <ul>\n        <li>Enter a word and an image will be generated, along with five prominent colors.</li>\n        </ul>\n      </div>\n      <div id=\"Color\"></div>\n       <form id=\"Input-Container\" onSubmit={getLink}>\n          <input value={query}\n          onChange={(event) => setQuery(event.target.value)} type=\"text\" name=\"search\"></input>\n          <input type=\"submit\" value=\"detect\"></input>\n        </form>\n\n\n       \n    </div>\n    \n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}